#cloud-config
users:
  - default

ssh_pwauth: True

chpasswd:
  list: |
    ubuntu:${password}
  expire: False

hostname: ${hostname}

write_files:
  - content: |
      #!/bin/bash
      # retrieve the network interface names
      ifaceFirstName=`ip -o link show | awk -F': ' '{print $2}' | head -2 | tail -1`
      macFirst=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}' | head -2 | tail -1`
      ifaceLastName=`ip -o link show | awk -F': ' '{print $2}' | head -3 | tail -1`
      macLast=`ip -o link show | awk -F'link/ether ' '{print $2}' | awk -F' ' '{print $1}' | head -3 | tail -1`
      hostname=${hostname}
      echo "${ip} $hostname" | tee -a /etc/hosts
      cp /etc/netplan/50-cloud-init.yaml /etc/netplan/50-cloud-init.yaml.old
      echo "network:" | tee /etc/netplan/50-cloud-init.yaml
      echo "    ethernets:" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "        $ifaceFirstName:" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            dhcp4: false" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            addresses: [${ip}/${prefix}]" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            match:" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "                macaddress: $macFirst" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            set-name: $ifaceFirstName" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            gateway4: ${default_gw}" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            nameservers:" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "              addresses: [${forwarders_netplan}]" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "        $ifaceLastName:" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            match:" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "                macaddress: $macLast" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "            set-name: $ifaceLastName" | tee -a /etc/netplan/50-cloud-init.yaml
      echo "    version: 2" | tee -a /etc/netplan/50-cloud-init.yaml
      netplan apply
      apt update
      apt install -y jq
      mv /etc/netplan/50-cloud-init.yaml /etc/netplan/50-cloud-init.yaml.old
      cat /etc/netplan/50-cloud-init.yaml.old | head -n -1 | tee /etc/netplan/50-cloud-init.yaml
      echo "    vlans:" | tee -a /etc/netplan/50-cloud-init.yaml
      networks='${networks}'
      echo $networks | jq -c -r .[] | while read net
      do
        echo "        vlan.`echo $net | jq -c -r .vlan_id`:" | tee -a /etc/netplan/50-cloud-init.yaml
        echo "            id: `echo $net | jq -c -r .vlan_id`" | tee -a /etc/netplan/50-cloud-init.yaml
        echo "            link: $ifaceLastName" | tee -a /etc/netplan/50-cloud-init.yaml
        echo "            addresses: [`echo $net | jq -c -r .gw`/`echo $net | jq -c -r .cidr | cut -f2 -d'/'`]" | tee -a /etc/netplan/50-cloud-init.yaml
        echo "pool $ntp_master iburst" | tee -a /etc/chrony/chrony.conf
      done
      echo "    version: 2" | tee -a /etc/netplan/50-cloud-init.yaml
      netplan apply
      apt update
      apt install -y jq
      #
      # DNS config
      #
      apt install -y bind9 bind9utils dnsutils
      cp /etc/bind/named.conf.options /etc/bind/named.conf.options.bkup
      cp /etc/bind/named.conf.options /etc/bind/named.conf.options.old
      sudo tee /etc/bind/named.conf.options > /dev/null <<EOT
      options {
        directory "/var/cache/bind";
        recursion yes;
        notify yes;
        allow-query { any; };
        allow-query-cache { any; };
        allow-recursion { any; };
        forwarders { ${forwarders_bind}; };
        dnssec-validation no;
        auth-nxdomain no; # conform to RFC1035
        listen-on { localhost; any; };
        listen-on-v6 { localhost; any; };
        allow-transfer { any; };
      };
      EOT
      #
      sudo cp /etc/bind/named.conf.local /etc/bind/named.conf.local.old
      sudo tee /etc/bind/named.conf.local > /dev/null <<EOT
      zone "${domain}" {
        type master;
        forwarders {};
        allow-transfer { any; };
        update-policy {
          grant myKeyName zonesub any;
        };
        file "/var/lib/bind/db.${domain}";
      };
      zone "${reverse}.in-addr.arpa" {
        type master;
        update-policy {
          grant myKeyName zonesub any;
        };
        allow-transfer { any; };
        file "/var/lib/bind/db.${reverse}";
      };
      EOT
      #
      sudo tee /var/lib/bind/db.${domain} > /dev/null <<EOT
      \$ORIGIN .
      \$TTL 60
      ${domain}                IN SOA dns.${domain}. admin.${domain}. (
                                      329        ; serial
                                      604800     ; refresh (1 week)
                                      86400      ; retry (1 day)
                                      2419200    ; expire (4 weeks)
                                      604800     ; minimum (1 week)
                                      )
                              NS      dns.${domain}.
      \$ORIGIN ${domain}.
      dns       IN            A       ${ip}
      EOT
      #
      count_esxi=1
      echo ${ips} | jq -c -r .[] | while read ip_esxi
      do
        echo "${basename}$count_esxi      IN            A       ${ip_esxi}" | tee -a /var/lib/bind/db.${domain}
        ((count_esxi++))
      done
      #
      sudo tee /var/lib/bind/db.${reverse} > /dev/null <<EOT
      \$ORIGIN .
      \$TTL 60
      ${reverse}.in-addr.arpa     IN SOA  dns.${domain}. admin.${domain}. (
                                      298        ; serial
                                      604800     ; refresh (1 week)
                                      86400      ; retry (1 day)
                                      2419200    ; expire (4 weeks)
                                      604800     ; minimum (1 week)
                                      )
                              NS      dns.${domain}.
      \$ORIGIN ${reverse}.in-addr.arpa.
      EOT
      count_esxi=1
      echo ${ips} | jq -c -r .[] | while read ip_esxi
      do
        echo "`echo $ip_esxi | cut -f4 -d'.'`            PTR     ${basename}$count_esxi.${domain}." | tee -a /var/lib/bind/db.${domain}
        ((count_esxi++))
      done
      systemctl restart bind9.service
      #
      # NTP config
      #
      apt install -y chrony
      mv /etc/chrony/chrony.conf /etc/chrony/chrony.conf.old
      cat /etc/chrony/chrony.conf.old | grep -v pool | tee /etc/chrony/chrony.conf
      ntp_masters='${ntp_masters}'
      echo $ntp_masters | jq -c -r .[] | while read ntp_master
      do
        echo "pool $ntp_master iburst" | tee -a /etc/chrony/chrony.conf
      done
      systemctl restart chrony.service
      echo "cloud init done" | tee /tmp/cloudInitDone.log
    path: /opt/bootstrap.sh
    permissions: 0755

  - content: |
      ubuntu ALL=(ALL) NOPASSWD:ALL
    path: /etc/sudoers.d/ubuntu

runcmd:
  - /opt/bootstrap.sh